# ------------------------------------------------------------
# WhereIsThisPlace â€“ GPU backend image (TorchServe + FastAPI + FAISS-GPU)
# ------------------------------------------------------------
FROM pytorch/torchserve:0.10.0-gpu

# Build-time variables & environment
ENV DEBIAN_FRONTEND=noninteractive \
    PATH="/usr/local/cuda/bin:${PATH}" \
    LD_LIBRARY_PATH="/usr/local/cuda/lib64:${LD_LIBRARY_PATH}" \
    PYTHONPATH="/app:${PYTHONPATH}"

# Explicitly switch to root user for system package installation
USER root

# 1. System dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
      build-essential git \
      ca-certificates wget && \
    rm -rf /var/lib/apt/lists/*

# 2. Copy application source
WORKDIR /app
COPY api/ ./api
COPY ml/  ./ml
# If you have a 'models' directory in the build context for where-v1.mar, copy it too
COPY models/ /app/models

# 4. Install Python dependencies via Poetry (using the working approach)
RUN pip install --no-cache-dir poetry==1.8.3 && \
    # Export poetry dependencies to requirements.txt and install them
    poetry --directory ./api export --without-hashes --only main -f requirements.txt | \
    pip install --no-cache-dir -r /dev/stdin && \
    # Install additional required packages including FastAPI explicitly
    pip install --no-cache-dir fastapi==0.111.0 'pydantic>=2.7' uvicorn[standard]

# 5. Install pre-built FAISS-GPU (much faster and more reliable)
RUN pip install --no-cache-dir faiss-gpu && \
    echo "FAISS-GPU installation completed successfully"

# 6. Prepare model store directory
RUN mkdir -p /model-store && \
    if [ -f /app/models/where-v1.mar ]; then \
        cp /app/models/where-v1.mar /model-store/ && \
        echo "Model artifact copied to /model-store/"; \
    else \
        echo "WARNING: No model artifact found at /app/models/where-v1.mar"; \
    fi

# 7. Expose ports
EXPOSE 8080 8000

# Remove any sed commands that fix imports
# The imports should now work correctly from source

# When starting the API in Docker:
WORKDIR /app
CMD ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000"]
