[tool.poetry]
name = "whereisthisplace-api"
version = "0.1.0"
description = "AI-powered photo geolocation API"
authors = ["Felix Gruner <your.email@example.com>"]
readme = "README.md"
packages = [
    {include = "api"},
    {include = "ml", from = ".."}
]

[tool.poetry.dependencies]
python = "^3.9,<3.13"
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.30.0"}
pydantic = "^2.7"
pydantic-settings = "^2.0.0"
python-multipart = "^0.0.9"
python-dotenv = "^1.0.0"
httpx = "^0.27.0"
# PyTorch with flexible versioning for cross-platform compatibility
torch = ">=2.0.0,<3.0.0"
torchvision = ">=0.15.0,<1.0.0"
# Use faiss-cpu for local development (faiss-gpu is Linux-only)
faiss-cpu = "^1.7.3"
numpy = "^1.24.0"
pillow = "^10.0.0"
# OpenAI for location descriptions
openai = "^1.0.0"
# Database
sqlalchemy = "^2.0.0"
asyncpg = "^0.29.0"
# AWS SDK if needed
boto3 = "^1.34.0"
# Async support
aiofiles = "^23.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^5.0.0"
black = "^24.0.0"
ruff = "^0.4.0"
mypy = "^1.0.0"
isort = "^5.13.0"
pre-commit = "^3.7.0"
ipython = "^8.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
addopts = [
    "--verbose",
    "--cov=api",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
follow_imports = "normal"
show_error_codes = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
no_implicit_reexport = true

[tool.ruff]
line-length = 100
target-version = "py39"
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    ".mypy_cache",
    ".pytest_cache",
    "*.egg-info",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise-without-from-inside-except
]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Optional: Add PyTorch index for better resolution
[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cpu"
priority = "supplemental"